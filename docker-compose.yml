version: '3.9'

services:
  db:
    image: postgres:14-alpine
    env_file:
      - .env
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_HOST: "${POSTGRES_HOST}"

    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}

    volumes:
      - ./data/db:/var/lib/postgresql/data/
    
    healthcheck:
          test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]

  house_website:
    build:
      context: ./house_website
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - '3000:3000'

    volumes:
      - ./house_website:/code/house_website
    
    depends_on:
      - house_server
  
  house_server: 
    build: 
      context: ./house_server
      dockerfile: Dockerfile

    env_file:
      - .env
      
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_PORT: "${POSTGRES_PORT}"
      POSTGRES_HOST: "${POSTGRES_HOST}"
      SECRET_KEY: "${SECRET_KEY}"
      DEBUG: ${DEBUG}

    ports: 
      - '8000:8000'

    volumes:
      - ./house_server:/app/house_server
    
    depends_on:
        db:
          condition: service_healthy
